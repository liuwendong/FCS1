{"remainingRequest":"/Users/apple/Desktop/华融催收APP开发/fcs/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/华融催收APP开发/fcs/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/Desktop/华融催收APP开发/fcs/src/utils.js","dependencies":[{"path":"/Users/apple/Desktop/华融催收APP开发/fcs/src/utils.js","mtime":1542246982328},{"path":"/Users/apple/Desktop/华融催收APP开发/fcs/node_modules/cache-loader/dist/cjs.js","mtime":1539243342312},{"path":"/Users/apple/Desktop/华融催收APP开发/fcs/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/Desktop/华融催收APP开发/fcs/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport CryptoJS from \"crypto-js/crypto-js\"; // 默认的 KEY 与 iv 如果没有给\n\nvar KEY = CryptoJS.enc.Utf8.parse(\"1234567890123456\");\nvar IV = CryptoJS.enc.Utf8.parse(\"1234567890123456\");\n/**\n * AES加密 ：字符串 key iv  返回base64\n */\n\nexport function Encrypt(word, keyStr, ivStr) {\n  var key = KEY;\n  var iv = IV;\n\n  if (keyStr) {\n    key = CryptoJS.enc.Utf8.parse(keyStr);\n    iv = CryptoJS.enc.Utf8.parse(ivStr);\n  }\n\n  var srcs = CryptoJS.enc.Utf8.parse(word);\n  var encrypted = CryptoJS.AES.encrypt(srcs, key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.ZeroPadding\n  }); // console.log(\"-=-=-=-\", encrypted.ciphertext)\n\n  return CryptoJS.enc.Base64.stringify(encrypted.ciphertext);\n}\n/**\n * AES 解密 ：字符串 key iv  返回base64\n *\n */\n\nexport function Decrypt(word, keyStr, ivStr) {\n  var key = KEY;\n  var iv = IV;\n\n  if (keyStr) {\n    key = CryptoJS.enc.Utf8.parse(keyStr);\n    iv = CryptoJS.enc.Utf8.parse(ivStr);\n  }\n\n  var base64 = CryptoJS.enc.Base64.parse(word);\n  var src = CryptoJS.enc.Base64.stringify(base64);\n  var decrypt = CryptoJS.AES.decrypt(src, key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.ZeroPadding\n  });\n  var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\n  return decryptedStr.toString();\n}",{"version":3,"sources":["/Users/apple/Desktop/华融催收APP开发/fcs/src/utils.js"],"names":["CryptoJS","KEY","enc","Utf8","parse","IV","Encrypt","word","keyStr","ivStr","key","iv","srcs","encrypted","AES","encrypt","mode","CBC","padding","pad","ZeroPadding","Base64","stringify","ciphertext","Decrypt","base64","src","decrypt","decryptedStr","toString"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,qBAArB,C,CAEA;;AACA,IAAMC,MAAMD,SAASE,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwB,kBAAxB,CAAZ;AACA,IAAMC,KAAKL,SAASE,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwB,kBAAxB,CAAX;AACA;;;;AAGA,OAAO,SAASE,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsC;AAC3C,MAAIC,MAAMT,GAAV;AACA,MAAIU,KAAKN,EAAT;;AAEA,MAAIG,MAAJ,EAAY;AACVE,UAAMV,SAASE,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBI,MAAxB,CAAN;AACAG,SAAKX,SAASE,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBK,KAAxB,CAAL;AACD;;AAED,MAAIG,OAAOZ,SAASE,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBG,IAAxB,CAAX;AACA,MAAIM,YAAYb,SAASc,GAAT,CAAaC,OAAb,CAAqBH,IAArB,EAA2BF,GAA3B,EAAgC;AAC9CC,QAAIA,EAD0C;AAE9CK,UAAMhB,SAASgB,IAAT,CAAcC,GAF0B;AAG9CC,aAASlB,SAASmB,GAAT,CAAaC;AAHwB,GAAhC,CAAhB,CAV2C,CAe3C;;AACA,SAAOpB,SAASE,GAAT,CAAamB,MAAb,CAAoBC,SAApB,CAA8BT,UAAUU,UAAxC,CAAP;AACD;AACD;;;;;AAIA,OAAO,SAASC,OAAT,CAAiBjB,IAAjB,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsC;AAC3C,MAAIC,MAAMT,GAAV;AACA,MAAIU,KAAKN,EAAT;;AAEA,MAAIG,MAAJ,EAAY;AACVE,UAAMV,SAASE,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBI,MAAxB,CAAN;AACAG,SAAKX,SAASE,GAAT,CAAaC,IAAb,CAAkBC,KAAlB,CAAwBK,KAAxB,CAAL;AACD;;AAED,MAAIgB,SAASzB,SAASE,GAAT,CAAamB,MAAb,CAAoBjB,KAApB,CAA0BG,IAA1B,CAAb;AACA,MAAImB,MAAM1B,SAASE,GAAT,CAAamB,MAAb,CAAoBC,SAApB,CAA8BG,MAA9B,CAAV;AAEA,MAAIE,UAAU3B,SAASc,GAAT,CAAaa,OAAb,CAAqBD,GAArB,EAA0BhB,GAA1B,EAA+B;AAC3CC,QAAIA,EADuC;AAE3CK,UAAMhB,SAASgB,IAAT,CAAcC,GAFuB;AAG3CC,aAASlB,SAASmB,GAAT,CAAaC;AAHqB,GAA/B,CAAd;AAMA,MAAIQ,eAAeD,QAAQE,QAAR,CAAiB7B,SAASE,GAAT,CAAaC,IAA9B,CAAnB;AACA,SAAOyB,aAAaC,QAAb,EAAP;AACD","sourcesContent":["import CryptoJS from \"crypto-js/crypto-js\";\n\n// 默认的 KEY 与 iv 如果没有给\nconst KEY = CryptoJS.enc.Utf8.parse(\"1234567890123456\");\nconst IV = CryptoJS.enc.Utf8.parse(\"1234567890123456\");\n/**\n * AES加密 ：字符串 key iv  返回base64\n */\nexport function Encrypt(word, keyStr, ivStr) {\n  let key = KEY;\n  let iv = IV;\n\n  if (keyStr) {\n    key = CryptoJS.enc.Utf8.parse(keyStr);\n    iv = CryptoJS.enc.Utf8.parse(ivStr);\n  }\n\n  let srcs = CryptoJS.enc.Utf8.parse(word);\n  var encrypted = CryptoJS.AES.encrypt(srcs, key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.ZeroPadding\n  });\n  // console.log(\"-=-=-=-\", encrypted.ciphertext)\n  return CryptoJS.enc.Base64.stringify(encrypted.ciphertext);\n}\n/**\n * AES 解密 ：字符串 key iv  返回base64\n *\n */\nexport function Decrypt(word, keyStr, ivStr) {\n  let key = KEY;\n  let iv = IV;\n\n  if (keyStr) {\n    key = CryptoJS.enc.Utf8.parse(keyStr);\n    iv = CryptoJS.enc.Utf8.parse(ivStr);\n  }\n\n  let base64 = CryptoJS.enc.Base64.parse(word);\n  let src = CryptoJS.enc.Base64.stringify(base64);\n\n  var decrypt = CryptoJS.AES.decrypt(src, key, {\n    iv: iv,\n    mode: CryptoJS.mode.CBC,\n    padding: CryptoJS.pad.ZeroPadding\n  });\n\n  var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\n  return decryptedStr.toString();\n}\n"]}]}